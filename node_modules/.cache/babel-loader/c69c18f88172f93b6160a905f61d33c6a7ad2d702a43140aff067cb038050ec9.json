{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/www/solution/frontend/src/components/Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Order from \"./orders/Order\";\nimport { OrderContext } from \"../context/OrderContext\";\nimport Button from \"./UI/ Button/Button\";\nimport axios from \"axios\";\nimport { GetOrders } from \"./hooks/GetOrders\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const {\n    setOrderId\n  } = useContext(OrderContext);\n  const [orders, setOrders] = useState([]);\n  const {\n    ordersData\n  } = GetOrders();\n  setOrders(ordersData);\n  const createOrder = async () => {\n    try {\n      //debugger;\n      const response = await axios.post('http://localhost:3001/api/orders');\n      if (response.data) {\n        orders.push(response.data);\n        setOrders(orders);\n        setOrderId(response.data.id);\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n  const clearOrder = async () => {\n    try {\n      //debugger;\n      const response = await axios.post('http://localhost:3001/api/orders/delete');\n      //setOrders(response.data.orders);\n      //setOrderId(response.data.orderId);\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n  const updateOrder = async updatedOrder => {\n    try {\n      orders.map(order => {\n        if (order.id === updatedOrder.id) {\n          order.status = updatedOrder.status;\n        }\n      });\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-order\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        title: \"Create New Order\",\n        clickHandler: createOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Clear Orders\",\n        clickHandler: clearOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"order-container\",\n      children: orders.length ? orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        order: order,\n        updateOrder: updateOrder\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }, this)) : 'Order collection is empty'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n_s(Orders, \"OtFjN9xgVphp6bTdwgT93fpuP+s=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useContext","useState","Order","OrderContext","Button","axios","GetOrders","jsxDEV","_jsxDEV","Orders","_s","setOrderId","orders","setOrders","ordersData","createOrder","response","post","data","push","id","error","console","clearOrder","updateOrder","updatedOrder","map","order","status","children","className","title","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","length","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/Orders.js"],"sourcesContent":["import React, {useContext, useState} from 'react';\nimport Order from \"./orders/Order\";\nimport {OrderContext} from \"../context/OrderContext\";\nimport Button from \"./UI/ Button/Button\";\nimport axios from \"axios\";\nimport {GetOrders} from \"./hooks/GetOrders\";\n\nconst Orders = () => {\n    const {setOrderId} = useContext(OrderContext);\n    const [orders, setOrders] = useState([]);\n    const {ordersData} = GetOrders();\n    setOrders(ordersData)\n\n    const createOrder = async () => {\n        try {\n            //debugger;\n            const response = await axios.post('http://localhost:3001/api/orders');\n            if (response.data) {\n                orders.push(response.data);\n                setOrders(orders);\n                setOrderId(response.data.id);\n            }\n\n        } catch (error) {\n            console.error('Error creating order:', error);\n        }\n    };\n\n    const clearOrder = async () => {\n        try {\n            //debugger;\n            const response = await axios.post('http://localhost:3001/api/orders/delete');\n            //setOrders(response.data.orders);\n            //setOrderId(response.data.orderId);\n        } catch (error) {\n            console.error('Error creating order:', error);\n        }\n    };\n\n    const updateOrder = async (updatedOrder) => {\n        try {\n            orders.map(order => {\n                if (order.id === updatedOrder.id) {\n                    order.status = updatedOrder.status;\n                }\n            })\n\n        } catch (error) {\n            console.error('Error creating order:', error);\n        }\n    };\n\n  return (\n      <div>\n          <div className=\"create-order\">\n              <Button title=\"Create New Order\" clickHandler={createOrder} />\n              <Button title=\"Clear Orders\" clickHandler={clearOrder} />\n          </div>\n          <ul className=\"order-container\">\n            {orders.length\n                ? orders.map(order => <Order key={order.id} order={order} updateOrder={updateOrder} />)\n                : 'Order collection is empty'\n            }\n          </ul>\n      </div>\n  );\n}\n\nexport default Orders;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}