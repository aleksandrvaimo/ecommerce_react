{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/www/solution/frontend/src/components/Orders.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from 'react';\nimport Order from \"./orders/Order\";\nimport { OrderContext } from \"../context/OrderContext\";\nimport Button from \"./UI/ Button/Button\";\nimport axios from \"axios\";\nimport { CreateOrder, UpdateOrder } from \"./hooks/Order\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Orders = () => {\n  _s();\n  const {\n    setOrderId,\n    setUpdate\n  } = useContext(OrderContext);\n  const [orders, setOrders] = useState([]);\n  const createOrder = CreateOrder(setOrders, setOrderId, setUpdate);\n  const updateOrder = UpdateOrder(orders, setOrderId, setUpdate, setOrders);\n  useEffect(() => {\n    createOrder();\n  }, []);\n\n  /*const updateOrder = async (updatedOrder) => {\n      try {\n          orders.map(order => {\n              if (order.id === updatedOrder.id) {\n                  order.status = updatedOrder.status;\n              }\n          })\n       } catch (error) {\n          console.error('Error creating order:', error);\n      }\n  };*/\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-order\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Create New Order\",\n        clickHandler: createOrder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"order-container\",\n      children: orders.length ? orders.map(order => /*#__PURE__*/_jsxDEV(Order, {\n        order: order,\n        updateOrder: updateOrder\n      }, order.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 39\n      }, this)) : 'Order collection is empty'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(Orders, \"5/Mxt/fuzWlkHyxkKedJNLVFhA4=\");\n_c = Orders;\nexport default Orders;\nvar _c;\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"names":["React","useContext","useState","useEffect","Order","OrderContext","Button","axios","CreateOrder","UpdateOrder","jsxDEV","_jsxDEV","Orders","_s","setOrderId","setUpdate","orders","setOrders","createOrder","updateOrder","children","className","title","clickHandler","fileName","_jsxFileName","lineNumber","columnNumber","length","map","order","id","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/Orders.js"],"sourcesContent":["import React, {useContext, useState, useEffect} from 'react';\nimport Order from \"./orders/Order\";\nimport {OrderContext} from \"../context/OrderContext\";\nimport Button from \"./UI/ Button/Button\";\nimport axios from \"axios\";\nimport {CreateOrder, UpdateOrder} from \"./hooks/Order\";\n\nconst Orders = () => {\n    const {setOrderId, setUpdate} = useContext(OrderContext);\n    const [orders, setOrders] = useState([]);\n    const createOrder = CreateOrder(setOrders, setOrderId, setUpdate)\n    const updateOrder = UpdateOrder(orders, setOrderId, setUpdate, setOrders)\n\n    useEffect(() => {\n        createOrder();\n    }, []);\n\n    /*const updateOrder = async (updatedOrder) => {\n        try {\n            orders.map(order => {\n                if (order.id === updatedOrder.id) {\n                    order.status = updatedOrder.status;\n                }\n            })\n\n        } catch (error) {\n            console.error('Error creating order:', error);\n        }\n    };*/\n\n  return (\n      <div>\n          <div className=\"create-order\">\n              <Button title=\"Create New Order\" clickHandler={createOrder} />\n          </div>\n          <ul className=\"order-container\">\n            {orders.length\n                ? orders.map(order => <Order key={order.id} order={order} updateOrder={updateOrder} />)\n                : 'Order collection is empty'\n            }\n          </ul>\n      </div>\n  );\n}\n\nexport default Orders;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAC5D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,SAAQC,YAAY,QAAO,yBAAyB;AACpD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,WAAW,EAAEC,WAAW,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAACC,UAAU;IAAEC;EAAS,CAAC,GAAGd,UAAU,CAACI,YAAY,CAAC;EACxD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMgB,WAAW,GAAGV,WAAW,CAACS,SAAS,EAAEH,UAAU,EAAEC,SAAS,CAAC;EACjE,MAAMI,WAAW,GAAGV,WAAW,CAACO,MAAM,EAAEF,UAAU,EAAEC,SAAS,EAAEE,SAAS,CAAC;EAEzEd,SAAS,CAAC,MAAM;IACZe,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACIP,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAD,QAAA,eACzBT,OAAA,CAACL,MAAM;QAACgB,KAAK,EAAC,kBAAkB;QAACC,YAAY,EAAEL;MAAY;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACNhB,OAAA;MAAIU,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAC5BJ,MAAM,CAACY,MAAM,GACRZ,MAAM,CAACa,GAAG,CAACC,KAAK,iBAAInB,OAAA,CAACP,KAAK;QAAgB0B,KAAK,EAAEA,KAAM;QAACX,WAAW,EAAEA;MAAY,GAAjDW,KAAK,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2C,CAAC,CAAC,GACrF;IAA2B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEZ,CAAC;AAAAd,EAAA,CApCKD,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AAsCZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}