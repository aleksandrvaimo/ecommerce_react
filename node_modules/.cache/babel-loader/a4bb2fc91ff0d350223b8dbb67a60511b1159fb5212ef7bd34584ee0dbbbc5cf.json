{"ast":null,"code":"import axios from \"axios\";\nexport function AddProduct(itemId, orderId, setUpdate) {\n  const AddProduct = async e => {\n    e.preventDefault();\n    const options = {\n      products: [itemId] // Can be added multiple items at once: [itemId]\n    };\n    try {\n      await axios.post(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return AddProduct;\n}\n_c = AddProduct;\nexport function AddUpdateProduct(item, orderId, setUpdate) {\n  const addUpdateProduct = async e => {\n    var _item$qty;\n    e.preventDefault();\n    item.qty = (_item$qty = item.qty) !== null && _item$qty !== void 0 ? _item$qty : 1;\n    const options = {\n      products: [item]\n    };\n    try {\n      await axios.post(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return addUpdateProduct;\n}\n_c2 = AddUpdateProduct;\nexport function ReplaceProduct(item, orderId, setUpdate) {\n  const replaceProduct = async e => {\n    var _item$qty2;\n    e.preventDefault();\n    item.replaced_with.quantity = (_item$qty2 = item.qty) !== null && _item$qty2 !== void 0 ? _item$qty2 : 1;\n    const options = {\n      replaced_with: item.replaced_with\n    };\n    try {\n      const response = await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${item.id}`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return replaceProduct;\n}\n_c3 = ReplaceProduct;\nexport function UpdateProductQty(itemId, orderId, setUpdate) {\n  const updateProductQty = async e => {\n    e.preventDefault();\n    let qty = parseInt(e.target.value);\n    const options = {\n      quantity: qty\n    };\n    try {\n      await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${itemId}`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return updateProductQty;\n}\n_c4 = UpdateProductQty;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"AddProduct\");\n$RefreshReg$(_c2, \"AddUpdateProduct\");\n$RefreshReg$(_c3, \"ReplaceProduct\");\n$RefreshReg$(_c4, \"UpdateProductQty\");","map":{"version":3,"names":["axios","AddProduct","itemId","orderId","setUpdate","e","preventDefault","options","products","post","process","env","REACT_APP_BE_URL","error","console","_c","AddUpdateProduct","item","addUpdateProduct","_item$qty","qty","_c2","ReplaceProduct","replaceProduct","_item$qty2","replaced_with","quantity","response","patch","id","_c3","UpdateProductQty","updateProductQty","parseInt","target","value","_c4","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/hooks/Products.js"],"sourcesContent":["import axios from \"axios\";\n\nexport function AddProduct(itemId, orderId, setUpdate) {\n    const AddProduct = async (e) => {\n        e.preventDefault()\n\n        const options = {\n            products: [itemId] // Can be added multiple items at once: [itemId]\n        };\n\n        try {\n            await axios.post(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return AddProduct;\n}\n\nexport function AddUpdateProduct(item, orderId, setUpdate) {\n    const addUpdateProduct = async (e) => {\n        e.preventDefault()\n        item.qty = item.qty ?? 1;\n        const options = {\n            products: [item]\n        };\n\n        try {\n            await axios.post(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return addUpdateProduct;\n}\n\nexport function ReplaceProduct(item, orderId, setUpdate) {\n    const replaceProduct = async (e) => {\n        e.preventDefault()\n        item.replaced_with.quantity = item.qty ?? 1;\n        const options = {\n            replaced_with: item.replaced_with\n        };\n\n        try {\n            const response = await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${item.id}`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return replaceProduct;\n}\n\nexport function UpdateProductQty(itemId, orderId, setUpdate) {\n    const updateProductQty = async (e) => {\n        e.preventDefault()\n        let qty = parseInt(e.target.value);\n        const options = {\n            quantity: qty\n        };\n\n        try {\n            await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${itemId}`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return updateProductQty;\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}