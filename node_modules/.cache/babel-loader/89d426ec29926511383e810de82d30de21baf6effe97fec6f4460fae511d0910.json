{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nexport function GetCurrentOrder(orderId) {\n  const order = [];\n  return async orderId => {\n    try {\n      debugger;\n      const response = await axios.get(`/api/orders/${orderId}`);\n      debugger;\n      if (response.data && response.data.orders.length) {\n        debugger;\n        order = response.data;\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n    return order;\n  };\n}\n_c = GetCurrentOrder;\nvar _c;\n$RefreshReg$(_c, \"GetCurrentOrder\");","map":{"version":3,"names":["useEffect","useState","axios","GetCurrentOrder","orderId","order","response","get","data","orders","length","error","console","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/hooks/GetCurrentOrder.js"],"sourcesContent":["import {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport function GetCurrentOrder(orderId) {\n    const order = [];\n    return async (orderId) => {\n        try {\n            debugger;\n            const response = await axios.get(`/api/orders/${orderId}`);\n            debugger;\n            if (response.data && response.data.orders.length) {\n                debugger;\n                order = response.data;\n            }\n\n        } catch (error) {\n            console.error('Error creating order:', error);\n        }\n\n        return order;\n    };\n}"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,QAAQ,QAAO,OAAO;AACzC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,eAAeA,CAACC,OAAO,EAAE;EACrC,MAAMC,KAAK,GAAG,EAAE;EAChB,OAAO,MAAOD,OAAO,IAAK;IACtB,IAAI;MACA;MACA,MAAME,QAAQ,GAAG,MAAMJ,KAAK,CAACK,GAAG,CAAE,eAAcH,OAAQ,EAAC,CAAC;MAC1D;MACA,IAAIE,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;QAC9C;QACAL,KAAK,GAAGC,QAAQ,CAACE,IAAI;MACzB;IAEJ,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;IAEA,OAAON,KAAK;EAChB,CAAC;AACL;AAACQ,EAAA,GAlBeV,eAAe;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}