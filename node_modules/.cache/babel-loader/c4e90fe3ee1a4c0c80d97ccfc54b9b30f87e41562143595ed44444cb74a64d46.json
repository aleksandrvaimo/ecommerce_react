{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/www/solution/frontend/src/components/products/Product.js\",\n  _s = $RefreshSig$();\nimport Button from \"../UI/ Button/Button\";\nimport axios from \"axios\";\nimport { OrderContext } from \"../../context/OrderContext\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = props => {\n  _s();\n  const item = props.item;\n  const products = props.products;\n  const {\n    orderId,\n    setUpdate\n  } = useContext(OrderContext);\n  const [replace, setReplace] = useState(false);\n  const clickHandler = async e => {\n    var _item$qty;\n    e.preventDefault();\n    item.qty = (_item$qty = item.qty) !== null && _item$qty !== void 0 ? _item$qty : 1;\n    const options = {\n      products: [item]\n    };\n    try {\n      const response = await axios.post(`http://localhost:3001/api/orders/${orderId}/products`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const replaceHandler = async e => {\n    var _item$qty2;\n    e.preventDefault();\n    item.replaced_with.quantity = (_item$qty2 = item.qty) !== null && _item$qty2 !== void 0 ? _item$qty2 : 1;\n    const options = {\n      replaced_with: item.replaced_with\n    };\n    try {\n      const response = await axios.patch(`http://localhost:3001/api/orders/${orderId}/products/${item.id}`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const inputHandler = e => {\n    item.qty = parseInt(e.target.value);\n  };\n  const replaceWithHandler = e => {\n    let val = parseInt(e.target.value);\n    let replacement = products.find(product => product.id === val);\n    if (replacement && item.id != val) {\n      setReplace(true);\n      item.replaced_with = {\n        \"product_id\": val,\n        \"name\": replacement.name,\n        \"price\": replacement.price,\n        \"quantity\": 1\n      };\n    } else {\n      setReplace(false);\n      delete item.replaced_with;\n    }\n  };\n  const updateHandler = async e => {\n    e.preventDefault();\n    let qty = parseInt(e.target.value);\n    const options = {\n      quantity: qty\n    };\n    try {\n      const response = await axios.patch(`http://localhost:3001/api/orders/${orderId}/products/${item.id}`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"ProductID: \", item.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Name: \", item.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Price: \", item.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler,\n        defaultValue: \"1\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Replace With: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: replaceWithHandler,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), !replace && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Add To Order\",\n        clickHandler: clickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 26\n    }, this), replace && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Replace Item\",\n        clickHandler: replaceHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Update Qty: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: updateHandler,\n        defaultValue: \"1\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(Product, \"zmdfNTt3uAbvTnHqkHA2rNvAabk=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["Button","axios","OrderContext","useContext","useState","jsxDEV","_jsxDEV","Product","props","_s","item","products","orderId","setUpdate","replace","setReplace","clickHandler","e","_item$qty","preventDefault","qty","options","response","post","error","console","replaceHandler","_item$qty2","replaced_with","quantity","patch","id","inputHandler","parseInt","target","value","replaceWithHandler","val","replacement","find","product","name","price","updateHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","defaultValue","type","title","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/products/Product.js"],"sourcesContent":["import Button from \"../UI/ Button/Button\";\nimport axios from \"axios\";\nimport {OrderContext} from \"../../context/OrderContext\";\nimport {useContext, useState} from \"react\";\n\nconst Product = (props) => {\n    const item = props.item;\n    const products = props.products;\n    const {orderId, setUpdate} = useContext(OrderContext);\n    const [replace, setReplace] = useState(false)\n\n    const clickHandler = async (e) => {\n        e.preventDefault()\n        item.qty = item.qty ?? 1;\n        const options = {\n            products: [item]\n        };\n\n        try {\n            const response = await axios.post(`http://localhost:3001/api/orders/${orderId}/products`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    const replaceHandler = async (e) => {\n        e.preventDefault()\n        item.replaced_with.quantity = item.qty ?? 1;\n\n        const options = {\n            replaced_with: item.replaced_with\n        };\n\n        try {\n            const response = await axios.patch(`http://localhost:3001/api/orders/${orderId}/products/${item.id}`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    const inputHandler = (e) => {\n        item.qty = parseInt(e.target.value);\n    }\n\n    const replaceWithHandler = (e) => {\n        let val = parseInt(e.target.value);\n        let replacement = products.find(product => product.id === val);\n\n        if (replacement && item.id != val) {\n            setReplace(true);\n            item.replaced_with = {\"product_id\": val, \"name\": replacement.name, \"price\": replacement.price, \"quantity\": 1};\n        } else {\n            setReplace(false);\n            delete item.replaced_with;\n        }\n    }\n\n    const updateHandler = async (e) => {\n        e.preventDefault()\n        let qty = parseInt(e.target.value);\n        const options = {\n            quantity: qty\n        };\n\n        try {\n            const response = await axios.patch(`http://localhost:3001/api/orders/${orderId}/products/${item.id}`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return (\n        <li>\n            <span>ProductID: {item.id}</span>\n            <span>Name: {item.name}</span>\n            <span>Price: {item.price}</span>\n            <span>Qty: <input onChange={inputHandler} defaultValue=\"1\" type=\"number\" /></span>\n            <span>Replace With: <input onChange={replaceWithHandler} type=\"number\" /></span>\n            {!replace && <span><Button title=\"Add To Order\" clickHandler={clickHandler} /></span>}\n            {replace && <span><Button title=\"Replace Item\" clickHandler={replaceHandler} /></span>}\n            <span>Update Qty: <input onChange={updateHandler} defaultValue=\"1\" type=\"number\" /></span>\n        </li>\n    );\n}\n\nexport default Product;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}