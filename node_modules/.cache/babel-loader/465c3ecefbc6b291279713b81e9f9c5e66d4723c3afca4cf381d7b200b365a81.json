{"ast":null,"code":"import React, { useState } from \"react\";\nimport axios from \"axios\";\nexport function GetCurrentOrder(orderId, setUpdate, setOrder, setOrderItems) {\n  //const [order, setOrder] = useState({ order: [], items: [] });\n\n  const getOrderData = async () => {\n    try {\n      if (!orderId) {\n        return;\n      }\n      const response = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}`);\n      if (response.data) {\n        setOrder(response.data);\n        //setOrder(prevState => ({ ...prevState, order: response.data }));\n      }\n      const responseItems = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`);\n      if (responseItems.data) {\n        setOrderItems(responseItems.data);\n        //setOrder(prevState => ({ ...prevState, items: responseItems.data }));\n      }\n      setUpdate(false);\n    } catch (error) {\n      console.error('Error fetching order:', error);\n    }\n  };\n  return getOrderData;\n}\n_c = GetCurrentOrder;\nvar _c;\n$RefreshReg$(_c, \"GetCurrentOrder\");","map":{"version":3,"names":["React","useState","axios","GetCurrentOrder","orderId","setUpdate","setOrder","setOrderItems","getOrderData","response","get","process","env","REACT_APP_BE_URL","data","responseItems","error","console","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/hooks/GetCurrentOrder.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport function GetCurrentOrder(orderId, setUpdate, setOrder, setOrderItems) {\n    //const [order, setOrder] = useState({ order: [], items: [] });\n\n    const getOrderData = async () => {\n        try {\n            if (!orderId) {\n                return;\n            }\n\n            const response = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}`);\n            if (response.data) {\n                setOrder(response.data);\n                //setOrder(prevState => ({ ...prevState, order: response.data }));\n            }\n\n            const responseItems = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`);\n            if (responseItems.data) {\n                setOrderItems(responseItems.data)\n                //setOrder(prevState => ({ ...prevState, items: responseItems.data }));\n            }\n\n            setUpdate(false);\n        } catch (error) {\n            console.error('Error fetching order:', error);\n        }\n    };\n\n    return getOrderData;\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,eAAeA,CAACC,OAAO,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,aAAa,EAAE;EACzE;;EAEA,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,IAAI,CAACJ,OAAO,EAAE;QACV;MACJ;MAEA,MAAMK,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcT,OAAQ,EAAC,CAAC;MACzF,IAAIK,QAAQ,CAACK,IAAI,EAAE;QACfR,QAAQ,CAACG,QAAQ,CAACK,IAAI,CAAC;QACvB;MACJ;MAEA,MAAMC,aAAa,GAAG,MAAMb,KAAK,CAACQ,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcT,OAAQ,WAAU,CAAC;MACvG,IAAIW,aAAa,CAACD,IAAI,EAAE;QACpBP,aAAa,CAACQ,aAAa,CAACD,IAAI,CAAC;QACjC;MACJ;MAEAT,SAAS,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,OAAOR,YAAY;AACvB;AAACU,EAAA,GA5Bef,eAAe;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}