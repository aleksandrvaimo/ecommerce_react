{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/www/solution/frontend/src/components/CurrentOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { OrderContext } from \"../context/OrderContext\";\nimport Item from \"./orders/Item\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CurrentOrder = () => {\n  _s();\n  const {\n    orders,\n    orderId\n  } = useContext(OrderContext);\n  if (!orders.length) {\n    return null;\n  }\n  let order = [];\n  if (orderId) {\n    order = orders.find(order => order.id === orderId);\n  }\n  debugger;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: order && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current-order\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-element\",\n        children: [\"Currently Used Order ID: \", order.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-element\",\n        children: [\"Status: \", order.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-element\",\n        children: [\"Items: \", order.items.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"order-item-container\",\n        children: order.items.length ? order.items.map(item => /*#__PURE__*/_jsxDEV(Item, {\n          item: item\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 52\n        }, this)) : 'No Items'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)\n  }, void 0, false);\n};\n_s(CurrentOrder, \"SkARKcIpgwINzvu0pLJdlMQKmK8=\");\n_c = CurrentOrder;\nexport default CurrentOrder;\nvar _c;\n$RefreshReg$(_c, \"CurrentOrder\");","map":{"version":3,"names":["React","useContext","OrderContext","Item","jsxDEV","_jsxDEV","Fragment","_Fragment","CurrentOrder","_s","orders","orderId","length","order","find","id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","status","items","map","item","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/CurrentOrder.js"],"sourcesContent":["import React, {useContext} from 'react';\nimport {OrderContext} from \"../context/OrderContext\";\nimport Item from \"./orders/Item\";\n\nconst CurrentOrder = () => {\n    const {orders, orderId} = useContext(OrderContext);\n\n    if (!orders.length) {\n        return null;\n    }\n\n    let order = [];\n\n    if (orderId) {\n        order = orders.find(order => order.id === orderId);\n    }\n    debugger;\n\n    return (\n        <>\n            {order &&\n             <div className=\"current-order\">\n                 <div className=\"order-element\">Currently Used Order ID: {order.id}</div>\n                 <div className=\"order-element\">Status: {order.status}</div>\n                 <div className=\"order-element\">Items: {order.items.length}</div>\n                 <div className=\"order-item-container\">\n                     {order.items.length\n                         ? order.items.map(item => <Item key={item.id} item={item} />)\n                         : 'No Items'\n                     }\n                 </div>\n             </div>}\n        </>\n    );\n}\n\nexport default CurrentOrder;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,UAAU,QAAO,OAAO;AACvC,SAAQC,YAAY,QAAO,yBAAyB;AACpD,OAAOC,IAAI,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAACC,MAAM;IAAEC;EAAO,CAAC,GAAGV,UAAU,CAACC,YAAY,CAAC;EAElD,IAAI,CAACQ,MAAM,CAACE,MAAM,EAAE;IAChB,OAAO,IAAI;EACf;EAEA,IAAIC,KAAK,GAAG,EAAE;EAEd,IAAIF,OAAO,EAAE;IACTE,KAAK,GAAGH,MAAM,CAACI,IAAI,CAACD,KAAK,IAAIA,KAAK,CAACE,EAAE,KAAKJ,OAAO,CAAC;EACtD;EACA;EAEA,oBACIN,OAAA,CAAAE,SAAA;IAAAS,QAAA,EACKH,KAAK,iBACLR,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAD,QAAA,gBAC1BX,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAD,QAAA,GAAC,2BAAyB,EAACH,KAAK,CAACE,EAAE;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACxEhB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAD,QAAA,GAAC,UAAQ,EAACH,KAAK,CAACS,MAAM;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAC3DhB,OAAA;QAAKY,SAAS,EAAC,eAAe;QAAAD,QAAA,GAAC,SAAO,EAACH,KAAK,CAACU,KAAK,CAACX,MAAM;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChEhB,OAAA;QAAKY,SAAS,EAAC,sBAAsB;QAAAD,QAAA,EAChCH,KAAK,CAACU,KAAK,CAACX,MAAM,GACbC,KAAK,CAACU,KAAK,CAACC,GAAG,CAACC,IAAI,iBAAIpB,OAAA,CAACF,IAAI;UAAesB,IAAI,EAAEA;QAAK,GAApBA,IAAI,CAACV,EAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,CAAC,GAC3D;MAAU;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC,gBACT,CAAC;AAEX,CAAC;AAAAZ,EAAA,CA9BKD,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}