{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/www/solution/frontend/src/components/products/Product.js\",\n  _s = $RefreshSig$();\nimport Button from \"../UI/ Button/Button\";\nimport axios from \"axios\";\nimport { OrderContext } from \"../../context/OrderContext\";\nimport { useContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = props => {\n  _s();\n  const item = props.item;\n  const products = props.products;\n  //(const {orderId, setOrderId, orders, setOrders} = useContext(OrderContext);\n  const {\n    orderId,\n    setUpdate\n  } = useContext(OrderContext);\n  const [replace, setReplace] = useState(false);\n  const clickHandler = async e => {\n    var _item$qty;\n    e.preventDefault();\n    console.log('Product was added to cart...', item.id);\n    console.log('Selected Order Id: ', orderId);\n    item.qty = (_item$qty = item.qty) !== null && _item$qty !== void 0 ? _item$qty : 1;\n    const options = {\n      products: [item]\n    };\n    try {\n      const response = await axios.post(`http://localhost:3001/api/orders/${orderId}/products`, options);\n\n      //debugger;\n      setUpdate(true);\n      //setOrders(response.data);\n\n      //console.log('My Order:', orders);\n      //console.log('Response:', response.data);\n      //setOrderId(order.id)\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const replaceHandler = async e => {\n    var _item$qty2;\n    e.preventDefault();\n    console.log('Product was added to cart...', item.id);\n    console.log('Selected Order Id: ', orderId);\n    item.qty = (_item$qty2 = item.qty) !== null && _item$qty2 !== void 0 ? _item$qty2 : 1;\n    const options = {\n      products: [item]\n    };\n    try {\n      const response = await axios.patch(`http://localhost:3001/api/orders/${orderId}/products`, options);\n\n      //debugger;\n      setUpdate(true);\n      //setOrders(response.data);\n\n      //console.log('My Order:', orders);\n      //console.log('Response:', response.data);\n      //setOrderId(order.id)\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const inputHandler = e => {\n    item.qty = parseInt(e.target.value);\n  };\n  const replaceWithHandler = e => {\n    let val = parseInt(e.target.value);\n    console.log(val);\n    if (val) {\n      setReplace(true);\n    } else {\n      setReplace(false);\n    }\n    item.replace_with = val;\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"ProductID: \", item.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Name: \", item.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Price: \", item.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: inputHandler,\n        defaultValue: \"1\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Replace With: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: replaceWithHandler,\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), !replace && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Add To Order\",\n        clickHandler: clickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 32\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 26\n    }, this), replace && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Replace Item\",\n        clickHandler: replaceHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n_s(Product, \"zmdfNTt3uAbvTnHqkHA2rNvAabk=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["Button","axios","OrderContext","useContext","useState","jsxDEV","_jsxDEV","Product","props","_s","item","products","orderId","setUpdate","replace","setReplace","clickHandler","e","_item$qty","preventDefault","console","log","id","qty","options","response","post","error","replaceHandler","_item$qty2","patch","inputHandler","parseInt","target","value","replaceWithHandler","val","replace_with","children","fileName","_jsxFileName","lineNumber","columnNumber","name","price","onChange","defaultValue","type","title","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/products/Product.js"],"sourcesContent":["import Button from \"../UI/ Button/Button\";\nimport axios from \"axios\";\nimport {OrderContext} from \"../../context/OrderContext\";\nimport {useContext, useState} from \"react\";\n\nconst Product = (props) => {\n    const item = props.item;\n    const products = props.products;\n    //(const {orderId, setOrderId, orders, setOrders} = useContext(OrderContext);\n    const {orderId, setUpdate} = useContext(OrderContext);\n    const [replace, setReplace] = useState(false)\n    const clickHandler = async (e) => {\n        e.preventDefault()\n        console.log('Product was added to cart...', item.id)\n        console.log('Selected Order Id: ', orderId)\n        item.qty = item.qty ?? 1;\n\n        const options = {\n            products: [item]\n        };\n\n        try {\n            const response = await axios.post(`http://localhost:3001/api/orders/${orderId}/products`, options);\n\n            //debugger;\n            setUpdate(true);\n            //setOrders(response.data);\n\n            //console.log('My Order:', orders);\n            //console.log('Response:', response.data);\n            //setOrderId(order.id)\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    const replaceHandler = async (e) => {\n        e.preventDefault()\n        console.log('Product was added to cart...', item.id)\n        console.log('Selected Order Id: ', orderId)\n        item.qty = item.qty ?? 1;\n\n        const options = {\n            products: [item]\n        };\n\n        try {\n            const response = await axios.patch(`http://localhost:3001/api/orders/${orderId}/products`, options);\n\n            //debugger;\n            setUpdate(true);\n            //setOrders(response.data);\n\n            //console.log('My Order:', orders);\n            //console.log('Response:', response.data);\n            //setOrderId(order.id)\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    const inputHandler = (e) => {\n        item.qty = parseInt(e.target.value);\n    }\n\n    const replaceWithHandler = (e) => {\n        let val = parseInt(e.target.value);\n        console.log(val)\n        if (val) {\n            setReplace(true);\n        } else {\n            setReplace(false);\n        }\n\n        item.replace_with = val;\n    }\n\n    return (\n        <li>\n            <span>ProductID: {item.id}</span>\n            <span>Name: {item.name}</span>\n            <span>Price: {item.price}</span>\n            <span>Qty: <input onChange={inputHandler} defaultValue=\"1\" type=\"number\" /></span>\n            <span>Replace With: <input onChange={replaceWithHandler} type=\"number\" /></span>\n            {!replace && <span><Button title=\"Add To Order\" clickHandler={clickHandler} /></span>}\n            {replace && <span><Button title=\"Replace Item\" clickHandler={replaceHandler} /></span>}\n        </li>\n    );\n}\n\nexport default Product;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}