{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useContext } from \"react\";\nimport { OrderContext } from \"../../context/OrderContext\";\nimport axios from \"axios\";\nexport function GetOrders() {\n  _s();\n  const {\n    setOrders,\n    setOrderId\n  } = useContext(OrderContext);\n  const GetOrders = async () => {\n    try {\n      debugger;\n      const response = await axios.get('http://localhost:3001/api/orders/collection');\n      if (response.data && response.data.orders.length) {\n        setOrders(response.data);\n        setOrderId(response.data[0].id);\n      } else {\n        const response = await axios.post('http://localhost:3001/api/orders');\n        if (response.data && response.data.orders.length) {\n          setOrders(response.data.orders);\n          setOrderId(response.data.orderId);\n        }\n      }\n    } catch (error) {\n      console.error('Error creating order:', error);\n    }\n  };\n  useEffect(() => {\n    GetOrders();\n  }, []);\n}\n_s(GetOrders, \"v1mVEfLmtqRylA7AjlI0PxNNF1E=\");\n_c = GetOrders;\nvar _c;\n$RefreshReg$(_c, \"GetOrders\");","map":{"version":3,"names":["useEffect","useContext","OrderContext","axios","GetOrders","_s","setOrders","setOrderId","response","get","data","orders","length","id","post","orderId","error","console","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/hooks/GetOrders.js"],"sourcesContent":["import {useEffect, useContext} from \"react\";\nimport {OrderContext} from \"../../context/OrderContext\";\nimport axios from \"axios\";\n\nexport function GetOrders() {\n    const {setOrders, setOrderId} = useContext(OrderContext);\n    const GetOrders = async () => {\n        try {\n            debugger;\n            const response = await axios.get('http://localhost:3001/api/orders/collection');\n            if (response.data && response.data.orders.length) {\n                setOrders(response.data);\n                setOrderId(response.data[0].id);\n            } else {\n                const response = await axios.post('http://localhost:3001/api/orders');\n                if (response.data && response.data.orders.length) {\n                    setOrders(response.data.orders);\n                    setOrderId(response.data.orderId);\n                }\n            }\n\n        } catch (error) {\n            console.error('Error creating order:', error);\n        }\n    };\n\n    useEffect(() => {\n        GetOrders();\n    }, []);\n}"],"mappings":";AAAA,SAAQA,SAAS,EAAEC,UAAU,QAAO,OAAO;AAC3C,SAAQC,YAAY,QAAO,4BAA4B;AACvD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAACC,SAAS;IAAEC;EAAU,CAAC,GAAGN,UAAU,CAACC,YAAY,CAAC;EACxD,MAAME,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACA;MACA,MAAMI,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,6CAA6C,CAAC;MAC/E,IAAID,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;QAC9CN,SAAS,CAACE,QAAQ,CAACE,IAAI,CAAC;QACxBH,UAAU,CAACC,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC,CAACG,EAAE,CAAC;MACnC,CAAC,MAAM;QACH,MAAML,QAAQ,GAAG,MAAML,KAAK,CAACW,IAAI,CAAC,kCAAkC,CAAC;QACrE,IAAIN,QAAQ,CAACE,IAAI,IAAIF,QAAQ,CAACE,IAAI,CAACC,MAAM,CAACC,MAAM,EAAE;UAC9CN,SAAS,CAACE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC;UAC/BJ,UAAU,CAACC,QAAQ,CAACE,IAAI,CAACK,OAAO,CAAC;QACrC;MACJ;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZI,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;AACV;AAACC,EAAA,CAzBeD,SAAS;AAAAc,EAAA,GAATd,SAAS;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}