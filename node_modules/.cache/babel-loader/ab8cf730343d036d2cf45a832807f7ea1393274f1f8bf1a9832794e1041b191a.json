{"ast":null,"code":"import axios from \"axios\";\nexport function AddUpdateProduct(item, orderId, setUpdate) {\n  const addUpdateProduct = async e => {\n    var _item$qty;\n    e.preventDefault();\n    debugger;\n    item.qty = (_item$qty = item.qty) !== null && _item$qty !== void 0 ? _item$qty : 1;\n    const options = {\n      products: [item]\n    };\n    try {\n      await axios.post(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return addUpdateProduct;\n}\n_c = AddUpdateProduct;\nexport function ReplaceProduct(item, orderId, setUpdate) {\n  const replaceProduct = async e => {\n    var _item$qty2;\n    e.preventDefault();\n    item.replaced_with.quantity = (_item$qty2 = item.qty) !== null && _item$qty2 !== void 0 ? _item$qty2 : 1;\n    const options = {\n      replaced_with: item.replaced_with\n    };\n    try {\n      const response = await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${item.id}`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return replaceProduct;\n}\n_c2 = ReplaceProduct;\nexport function UpdateProductQty(itemId, orderId, setUpdate) {\n  const updateProductQty = async e => {\n    e.preventDefault();\n    let qty = parseInt(e.target.value);\n    const options = {\n      quantity: qty\n    };\n    try {\n      const response = await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${itemId}`, options);\n      setUpdate(true);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return updateProductQty;\n}\n_c3 = UpdateProductQty;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AddUpdateProduct\");\n$RefreshReg$(_c2, \"ReplaceProduct\");\n$RefreshReg$(_c3, \"UpdateProductQty\");","map":{"version":3,"names":["axios","AddUpdateProduct","item","orderId","setUpdate","addUpdateProduct","e","_item$qty","preventDefault","qty","options","products","post","process","env","REACT_APP_BE_URL","error","console","_c","ReplaceProduct","replaceProduct","_item$qty2","replaced_with","quantity","response","patch","id","_c2","UpdateProductQty","itemId","updateProductQty","parseInt","target","value","_c3","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/hooks/Products.js"],"sourcesContent":["import axios from \"axios\";\n\nexport function AddUpdateProduct(item, orderId, setUpdate) {\n    const addUpdateProduct = async (e) => {\n        e.preventDefault()\n        debugger;\n        item.qty = item.qty ?? 1;\n        const options = {\n            products: [item]\n        };\n\n        try {\n            await axios.post(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return addUpdateProduct;\n}\n\nexport function ReplaceProduct(item, orderId, setUpdate) {\n    const replaceProduct = async (e) => {\n        e.preventDefault()\n        item.replaced_with.quantity = item.qty ?? 1;\n\n        const options = {\n            replaced_with: item.replaced_with\n        };\n\n        try {\n            const response = await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${item.id}`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return replaceProduct;\n}\n\nexport function UpdateProductQty(itemId, orderId, setUpdate) {\n    const updateProductQty = async (e) => {\n        e.preventDefault()\n        let qty = parseInt(e.target.value);\n        const options = {\n            quantity: qty\n        };\n\n        try {\n            const response = await axios.patch(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products/${itemId}`, options);\n            setUpdate(true);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    return updateProductQty;\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,gBAAgBA,CAACC,IAAI,EAAEC,OAAO,EAAEC,SAAS,EAAE;EACvD,MAAMC,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IAAA,IAAAC,SAAA;IAClCD,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB;IACAN,IAAI,CAACO,GAAG,IAAAF,SAAA,GAAGL,IAAI,CAACO,GAAG,cAAAF,SAAA,cAAAA,SAAA,GAAI,CAAC;IACxB,MAAMG,OAAO,GAAG;MACZC,QAAQ,EAAE,CAACT,IAAI;IACnB,CAAC;IAED,IAAI;MACA,MAAMF,KAAK,CAACY,IAAI,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcZ,OAAQ,WAAU,EAAEO,OAAO,CAAC;MAC3FN,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,OAAOX,gBAAgB;AAC3B;AAACa,EAAA,GAlBejB,gBAAgB;AAoBhC,OAAO,SAASkB,cAAcA,CAACjB,IAAI,EAAEC,OAAO,EAAEC,SAAS,EAAE;EACrD,MAAMgB,cAAc,GAAG,MAAOd,CAAC,IAAK;IAAA,IAAAe,UAAA;IAChCf,CAAC,CAACE,cAAc,CAAC,CAAC;IAClBN,IAAI,CAACoB,aAAa,CAACC,QAAQ,IAAAF,UAAA,GAAGnB,IAAI,CAACO,GAAG,cAAAY,UAAA,cAAAA,UAAA,GAAI,CAAC;IAE3C,MAAMX,OAAO,GAAG;MACZY,aAAa,EAAEpB,IAAI,CAACoB;IACxB,CAAC;IAED,IAAI;MACA,MAAME,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,KAAK,CAAE,GAAEZ,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcZ,OAAQ,aAAYD,IAAI,CAACwB,EAAG,EAAC,EAAEhB,OAAO,CAAC;MACxHN,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,OAAOI,cAAc;AACzB;AAACO,GAAA,GAlBeR,cAAc;AAoB9B,OAAO,SAASS,gBAAgBA,CAACC,MAAM,EAAE1B,OAAO,EAAEC,SAAS,EAAE;EACzD,MAAM0B,gBAAgB,GAAG,MAAOxB,CAAC,IAAK;IAClCA,CAAC,CAACE,cAAc,CAAC,CAAC;IAClB,IAAIC,GAAG,GAAGsB,QAAQ,CAACzB,CAAC,CAAC0B,MAAM,CAACC,KAAK,CAAC;IAClC,MAAMvB,OAAO,GAAG;MACZa,QAAQ,EAAEd;IACd,CAAC;IAED,IAAI;MACA,MAAMe,QAAQ,GAAG,MAAMxB,KAAK,CAACyB,KAAK,CAAE,GAAEZ,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcZ,OAAQ,aAAY0B,MAAO,EAAC,EAAEnB,OAAO,CAAC;MACvHN,SAAS,CAAC,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAChD;EACJ,CAAC;EAED,OAAOc,gBAAgB;AAC3B;AAACI,GAAA,GAjBeN,gBAAgB;AAAA,IAAAV,EAAA,EAAAS,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}