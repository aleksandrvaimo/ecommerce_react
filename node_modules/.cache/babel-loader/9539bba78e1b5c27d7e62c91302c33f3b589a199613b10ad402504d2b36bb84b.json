{"ast":null,"code":"var _jsxFileName = \"/Users/aleksandr/www/solution/frontend/src/components/products/Product.js\",\n  _s = $RefreshSig$();\nimport Button from \"../UI/ Button/Button\";\nimport axios from \"axios\";\nimport { OrderContext } from \"../../context/OrderContext\";\nimport { useContext } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Product = props => {\n  _s();\n  const item = props.item;\n  const {\n    orderId,\n    setOrderId,\n    orders,\n    setOrders\n  } = useContext(OrderContext);\n  const clickHandler = async () => {\n    console.log('Product was added to cart...', item.id);\n    console.log('Selected Order Id: ', orderId);\n    try {\n      const options = {\n        id: orderId,\n        items: [item],\n        qty: 1,\n        status: 'UPDATED'\n      };\n      const response = await axios.patch('http://localhost:3001/api/orders/' + orderId, options);\n      //debugger;\n\n      //const order = orders.find(order => order.id === orderId);\n      //order.status = newOrder.status;\n      //order.items = newOrder.items;\n      //const newOrder = response.data;\n\n      //prev.map(order => order.id == newOrder.id ? newOrder : order)\n      setOrders(response.data);\n\n      //setOrders(prev => ({...prev, items: newOrder.items}))\n      console.log('My Order:', orders);\n      console.log('Response:', response.data);\n      //setOrderId(order.id)\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  const inputHandler = e => {\n    item.qty = parseInt(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"ProductID: \", item.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Name: \", item.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Price: \", item.price]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"Qty: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: e => inputHandler(e),\n        defaultValue: \"1\",\n        type: \"number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        title: \"Add To Order\",\n        clickHandler: clickHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(Product, \"JJY5uU7A6+qZ2zWYxXVlEx3HTFE=\");\n_c = Product;\nexport default Product;\nvar _c;\n$RefreshReg$(_c, \"Product\");","map":{"version":3,"names":["Button","axios","OrderContext","useContext","jsxDEV","_jsxDEV","Product","props","_s","item","orderId","setOrderId","orders","setOrders","clickHandler","console","log","id","options","items","qty","status","response","patch","data","error","inputHandler","e","parseInt","target","value","children","fileName","_jsxFileName","lineNumber","columnNumber","name","price","onChange","defaultValue","type","title","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/products/Product.js"],"sourcesContent":["import Button from \"../UI/ Button/Button\";\nimport axios from \"axios\";\nimport {OrderContext} from \"../../context/OrderContext\";\nimport {useContext} from \"react\";\n\nconst Product = (props) => {\n    const item = props.item;\n    const {orderId, setOrderId, orders, setOrders} = useContext(OrderContext);\n\n    const clickHandler = async () => {\n        console.log('Product was added to cart...', item.id)\n        console.log('Selected Order Id: ', orderId)\n\n        try {\n            const options = {\n                id: orderId,\n                items: [item],\n                qty: 1,\n                status: 'UPDATED'\n            };\n\n            const response = await axios.patch('http://localhost:3001/api/orders/' + orderId, options);\n            //debugger;\n\n            //const order = orders.find(order => order.id === orderId);\n            //order.status = newOrder.status;\n            //order.items = newOrder.items;\n            //const newOrder = response.data;\n\n            //prev.map(order => order.id == newOrder.id ? newOrder : order)\n            setOrders(response.data);\n\n            //setOrders(prev => ({...prev, items: newOrder.items}))\n            console.log('My Order:', orders);\n            console.log('Response:', response.data);\n            //setOrderId(order.id)\n\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    }\n\n    const inputHandler = (e) => {\n        item.qty = parseInt(e.target.value);\n    }\n\n    return (\n        <li>\n            <span>ProductID: {item.id}</span>\n            <span>Name: {item.name}</span>\n            <span>Price: {item.price}</span>\n            <span>Qty: <input onChange={(e) => inputHandler(e)} defaultValue=\"1\" type=\"number\" /></span>\n            <span><Button title=\"Add To Order\" clickHandler={clickHandler} /></span>\n        </li>\n    );\n}\n\nexport default Product;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}