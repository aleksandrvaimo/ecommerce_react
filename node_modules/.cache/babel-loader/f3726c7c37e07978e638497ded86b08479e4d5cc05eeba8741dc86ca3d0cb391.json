{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nexport function GetCurrentOrder(orderId, setUpdate) {\n  _s();\n  const [order, setOrder] = useState({\n    order: [],\n    items: []\n  });\n  const getOrderData = async () => {\n    try {\n      if (!orderId) {\n        return;\n      }\n      const response = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}`);\n      if (response.data) {\n        setOrder(prevState => ({\n          ...prevState,\n          order: [...prevState.order, response.data]\n        }));\n      }\n      const responseItems = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`);\n      if (responseItems.data) {\n        setOrder(prevState => ({\n          ...prevState,\n          items: [...prevState.items, responseItems.data]\n        }));\n      }\n      setUpdate(false);\n    } catch (error) {\n      console.error('Error fetching order:', error);\n    }\n  };\n  return getOrderData;\n}\n_s(GetCurrentOrder, \"Mo293DrWQw3KmNVYQqZNk7DsCio=\");\n_c = GetCurrentOrder;\nvar _c;\n$RefreshReg$(_c, \"GetCurrentOrder\");","map":{"version":3,"names":["React","useState","axios","GetCurrentOrder","orderId","setUpdate","_s","order","setOrder","items","getOrderData","response","get","process","env","REACT_APP_BE_URL","data","prevState","responseItems","error","console","_c","$RefreshReg$"],"sources":["/Users/aleksandr/www/solution/frontend/src/components/hooks/GetCurrentOrder.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport function GetCurrentOrder(orderId, setUpdate) {\n    const [order, setOrder] = useState({ order: [], items: [] });\n\n    const getOrderData = async () => {\n        try {\n            if (!orderId) {\n                return;\n            }\n\n            const response = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}`);\n            if (response.data) {\n                setOrder(prevState => ({ ...prevState, order: [...prevState.order, response.data] }));\n            }\n\n            const responseItems = await axios.get(`${process.env.REACT_APP_BE_URL}/api/orders/${orderId}/products`);\n            if (responseItems.data) {\n                setOrder(prevState => ({ ...prevState, items: [...prevState.items, responseItems.data] }));\n            }\n\n            setUpdate(false);\n        } catch (error) {\n            console.error('Error fetching order:', error);\n        }\n    };\n\n    return getOrderData;\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,eAAeA,CAACC,OAAO,EAAEC,SAAS,EAAE;EAAAC,EAAA;EAChD,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC;IAAEM,KAAK,EAAE,EAAE;IAAEE,KAAK,EAAE;EAAG,CAAC,CAAC;EAE5D,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,IAAI,CAACN,OAAO,EAAE;QACV;MACJ;MAEA,MAAMO,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcX,OAAQ,EAAC,CAAC;MACzF,IAAIO,QAAQ,CAACK,IAAI,EAAE;QACfR,QAAQ,CAACS,SAAS,KAAK;UAAE,GAAGA,SAAS;UAAEV,KAAK,EAAE,CAAC,GAAGU,SAAS,CAACV,KAAK,EAAEI,QAAQ,CAACK,IAAI;QAAE,CAAC,CAAC,CAAC;MACzF;MAEA,MAAME,aAAa,GAAG,MAAMhB,KAAK,CAACU,GAAG,CAAE,GAAEC,OAAO,CAACC,GAAG,CAACC,gBAAiB,eAAcX,OAAQ,WAAU,CAAC;MACvG,IAAIc,aAAa,CAACF,IAAI,EAAE;QACpBR,QAAQ,CAACS,SAAS,KAAK;UAAE,GAAGA,SAAS;UAAER,KAAK,EAAE,CAAC,GAAGQ,SAAS,CAACR,KAAK,EAAES,aAAa,CAACF,IAAI;QAAE,CAAC,CAAC,CAAC;MAC9F;MAEAX,SAAS,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IACjD;EACJ,CAAC;EAED,OAAOT,YAAY;AACvB;AAACJ,EAAA,CA1BeH,eAAe;AAAAkB,EAAA,GAAflB,eAAe;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}